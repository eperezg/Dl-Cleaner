/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.liferay.dl.cleaner.model.impl;

import com.liferay.dl.cleaner.model.LostFile;
import com.liferay.dl.cleaner.model.LostFileModel;
import com.liferay.dl.cleaner.model.LostFileSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LostFile service. Represents a row in the &quot;DlCleaner_LostFile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.dl.cleaner.model.LostFileModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LostFileImpl}.
 * </p>
 *
 * @author guywandji
 * @see LostFileImpl
 * @see com.liferay.dl.cleaner.model.LostFile
 * @see com.liferay.dl.cleaner.model.LostFileModel
 * @generated
 */
@JSON(strict = true)
public class LostFileModelImpl extends BaseModelImpl<LostFile>
	implements LostFileModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a lost file model instance should use the {@link com.liferay.dl.cleaner.model.LostFile} interface instead.
	 */
	public static final String TABLE_NAME = "DlCleaner_LostFile";
	public static final Object[][] TABLE_COLUMNS = {
			{ "lostFileId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "fileEntryId", Types.BIGINT },
			{ "dlFileVersionId", Types.BIGINT },
			{ "dlFileTitle", Types.VARCHAR },
			{ "deleted", Types.BOOLEAN },
			{ "comment_", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table DlCleaner_LostFile (lostFileId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,fileEntryId LONG,dlFileVersionId LONG,dlFileTitle VARCHAR(75) null,deleted BOOLEAN,comment_ VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table DlCleaner_LostFile";
	public static final String ORDER_BY_JPQL = " ORDER BY lostFile.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY DlCleaner_LostFile.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.dl.cleaner.model.LostFile"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.dl.cleaner.model.LostFile"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.dl.cleaner.model.LostFile"),
			true);
	public static long DELETED_COLUMN_BITMASK = 1L;
	public static long DLFILEVERSIONID_COLUMN_BITMASK = 2L;
	public static long FILEENTRYID_COLUMN_BITMASK = 4L;
	public static long GROUPID_COLUMN_BITMASK = 8L;
	public static long CREATEDATE_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LostFile toModel(LostFileSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LostFile model = new LostFileImpl();

		model.setLostFileId(soapModel.getLostFileId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setFileEntryId(soapModel.getFileEntryId());
		model.setDlFileVersionId(soapModel.getDlFileVersionId());
		model.setDlFileTitle(soapModel.getDlFileTitle());
		model.setDeleted(soapModel.getDeleted());
		model.setComment(soapModel.getComment());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LostFile> toModels(LostFileSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LostFile> models = new ArrayList<LostFile>(soapModels.length);

		for (LostFileSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.dl.cleaner.model.LostFile"));

	public LostFileModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _lostFileId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLostFileId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _lostFileId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LostFile.class;
	}

	@Override
	public String getModelClassName() {
		return LostFile.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("lostFileId", getLostFileId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("fileEntryId", getFileEntryId());
		attributes.put("dlFileVersionId", getDlFileVersionId());
		attributes.put("dlFileTitle", getDlFileTitle());
		attributes.put("deleted", getDeleted());
		attributes.put("comment", getComment());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long lostFileId = (Long)attributes.get("lostFileId");

		if (lostFileId != null) {
			setLostFileId(lostFileId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long fileEntryId = (Long)attributes.get("fileEntryId");

		if (fileEntryId != null) {
			setFileEntryId(fileEntryId);
		}

		Long dlFileVersionId = (Long)attributes.get("dlFileVersionId");

		if (dlFileVersionId != null) {
			setDlFileVersionId(dlFileVersionId);
		}

		String dlFileTitle = (String)attributes.get("dlFileTitle");

		if (dlFileTitle != null) {
			setDlFileTitle(dlFileTitle);
		}

		Boolean deleted = (Boolean)attributes.get("deleted");

		if (deleted != null) {
			setDeleted(deleted);
		}

		String comment = (String)attributes.get("comment");

		if (comment != null) {
			setComment(comment);
		}
	}

	@JSON
	@Override
	public long getLostFileId() {
		return _lostFileId;
	}

	@Override
	public void setLostFileId(long lostFileId) {
		_lostFileId = lostFileId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getFileEntryId() {
		return _fileEntryId;
	}

	@Override
	public void setFileEntryId(long fileEntryId) {
		_columnBitmask |= FILEENTRYID_COLUMN_BITMASK;

		if (!_setOriginalFileEntryId) {
			_setOriginalFileEntryId = true;

			_originalFileEntryId = _fileEntryId;
		}

		_fileEntryId = fileEntryId;
	}

	public long getOriginalFileEntryId() {
		return _originalFileEntryId;
	}

	@JSON
	@Override
	public long getDlFileVersionId() {
		return _dlFileVersionId;
	}

	@Override
	public void setDlFileVersionId(long dlFileVersionId) {
		_columnBitmask |= DLFILEVERSIONID_COLUMN_BITMASK;

		if (!_setOriginalDlFileVersionId) {
			_setOriginalDlFileVersionId = true;

			_originalDlFileVersionId = _dlFileVersionId;
		}

		_dlFileVersionId = dlFileVersionId;
	}

	public long getOriginalDlFileVersionId() {
		return _originalDlFileVersionId;
	}

	@JSON
	@Override
	public String getDlFileTitle() {
		if (_dlFileTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _dlFileTitle;
		}
	}

	@Override
	public void setDlFileTitle(String dlFileTitle) {
		_dlFileTitle = dlFileTitle;
	}

	@JSON
	@Override
	public Boolean getDeleted() {
		return _deleted;
	}

	@Override
	public void setDeleted(Boolean deleted) {
		_columnBitmask |= DELETED_COLUMN_BITMASK;

		if (!_setOriginalDeleted) {
			_setOriginalDeleted = true;

			_originalDeleted = _deleted;
		}

		_deleted = deleted;
	}

	public Boolean getOriginalDeleted() {
		return _originalDeleted;
	}

	@JSON
	@Override
	public String getComment() {
		if (_comment == null) {
			return StringPool.BLANK;
		}
		else {
			return _comment;
		}
	}

	@Override
	public void setComment(String comment) {
		_comment = comment;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			LostFile.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LostFile toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LostFile)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LostFileImpl lostFileImpl = new LostFileImpl();

		lostFileImpl.setLostFileId(getLostFileId());
		lostFileImpl.setGroupId(getGroupId());
		lostFileImpl.setCompanyId(getCompanyId());
		lostFileImpl.setUserId(getUserId());
		lostFileImpl.setUserName(getUserName());
		lostFileImpl.setCreateDate(getCreateDate());
		lostFileImpl.setModifiedDate(getModifiedDate());
		lostFileImpl.setFileEntryId(getFileEntryId());
		lostFileImpl.setDlFileVersionId(getDlFileVersionId());
		lostFileImpl.setDlFileTitle(getDlFileTitle());
		lostFileImpl.setDeleted(getDeleted());
		lostFileImpl.setComment(getComment());

		lostFileImpl.resetOriginalValues();

		return lostFileImpl;
	}

	@Override
	public int compareTo(LostFile lostFile) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), lostFile.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LostFile)) {
			return false;
		}

		LostFile lostFile = (LostFile)obj;

		long primaryKey = lostFile.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LostFileModelImpl lostFileModelImpl = this;

		lostFileModelImpl._originalGroupId = lostFileModelImpl._groupId;

		lostFileModelImpl._setOriginalGroupId = false;

		lostFileModelImpl._originalFileEntryId = lostFileModelImpl._fileEntryId;

		lostFileModelImpl._setOriginalFileEntryId = false;

		lostFileModelImpl._originalDlFileVersionId = lostFileModelImpl._dlFileVersionId;

		lostFileModelImpl._setOriginalDlFileVersionId = false;

		lostFileModelImpl._originalDeleted = lostFileModelImpl._deleted;

		lostFileModelImpl._setOriginalDeleted = false;

		lostFileModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LostFile> toCacheModel() {
		LostFileCacheModel lostFileCacheModel = new LostFileCacheModel();

		lostFileCacheModel.lostFileId = getLostFileId();

		lostFileCacheModel.groupId = getGroupId();

		lostFileCacheModel.companyId = getCompanyId();

		lostFileCacheModel.userId = getUserId();

		lostFileCacheModel.userName = getUserName();

		String userName = lostFileCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			lostFileCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			lostFileCacheModel.createDate = createDate.getTime();
		}
		else {
			lostFileCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			lostFileCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			lostFileCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		lostFileCacheModel.fileEntryId = getFileEntryId();

		lostFileCacheModel.dlFileVersionId = getDlFileVersionId();

		lostFileCacheModel.dlFileTitle = getDlFileTitle();

		String dlFileTitle = lostFileCacheModel.dlFileTitle;

		if ((dlFileTitle != null) && (dlFileTitle.length() == 0)) {
			lostFileCacheModel.dlFileTitle = null;
		}

		lostFileCacheModel.deleted = getDeleted();

		lostFileCacheModel.comment = getComment();

		String comment = lostFileCacheModel.comment;

		if ((comment != null) && (comment.length() == 0)) {
			lostFileCacheModel.comment = null;
		}

		return lostFileCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{lostFileId=");
		sb.append(getLostFileId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", fileEntryId=");
		sb.append(getFileEntryId());
		sb.append(", dlFileVersionId=");
		sb.append(getDlFileVersionId());
		sb.append(", dlFileTitle=");
		sb.append(getDlFileTitle());
		sb.append(", deleted=");
		sb.append(getDeleted());
		sb.append(", comment=");
		sb.append(getComment());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.liferay.dl.cleaner.model.LostFile");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>lostFileId</column-name><column-value><![CDATA[");
		sb.append(getLostFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileEntryId</column-name><column-value><![CDATA[");
		sb.append(getFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dlFileVersionId</column-name><column-value><![CDATA[");
		sb.append(getDlFileVersionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dlFileTitle</column-name><column-value><![CDATA[");
		sb.append(getDlFileTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deleted</column-name><column-value><![CDATA[");
		sb.append(getDeleted());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comment</column-name><column-value><![CDATA[");
		sb.append(getComment());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LostFile.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LostFile.class
		};
	private long _lostFileId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _fileEntryId;
	private long _originalFileEntryId;
	private boolean _setOriginalFileEntryId;
	private long _dlFileVersionId;
	private long _originalDlFileVersionId;
	private boolean _setOriginalDlFileVersionId;
	private String _dlFileTitle;
	private Boolean _deleted;
	private Boolean _originalDeleted;
	private boolean _setOriginalDeleted;
	private String _comment;
	private long _columnBitmask;
	private LostFile _escapedModel;
}